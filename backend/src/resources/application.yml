#server:
#  servlet:
#    session:
#      timeout: # Session timeout. If a duration suffix is not specified, seconds is used
#  data:
#    redis:
#      host: 127.0.0.1
#      port: 6379
#      password: 1234
server:
  servlet:
    session:
      cookie:
        path: / # 적용될 URL 경로를 나타냅니다. 예를 들어, path를 "/"로 설정하면 해당 도메인의 모든 경로에서 쿠키가 사용될 수 있습니다.
        name: JSESSIONID # 이름을 지정합니다.
        domain: localhost # 유효 도메인을 지정합니다. 예를 들어, domain을 "zum.com"으로 설정하면 해당 도메인과 그 서브도메인에서 쿠키가 유효합니다.
        http-only: false # 브라우저에서 해당 쿠키에 대한 JavaScript 접근을 제한합니다. 이를 통해 XSS 공격을 방지할 수 있습니다.
        secure: true # 쿠키가 HTTPS(SSL/TLS) 연결을 통해서만 전송되어야 함을 나타냅니다. 즉, HTTPS로 암호화된 연결에서만 쿠키가 전송되어야 합니다.
      timeout: 3600 # 세션의 유효 시간을 지정합니다. 단위는 초입니다.
spring:
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password: 1234
  session:
    store-type: redis # 세션 저장소를 지정합니다.
    redis:
      namespace: spring:session #
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: '179077400696-64tl4f9kq3956o3gh39gtfs3h5f073ki.apps.googleusercontent.com'
            client-secret: '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'
            redirect-uri: 'http://localhost:8080/login/oauth2/code/google'
            authorization-grant-type: 'authorization_code'
            scope:
              - email
              - profile
          kakao:
            client-id: '59b4f04acf3bc1543ee8c893d376525f'
            client-secret: 'opcEyta7v6ue2d3QjdKyssUhTsce33us'
            redirect-uri: 'http://localhost:8080/login/oauth2/code/kakao'
            authorization-grant-type: 'authorization_code'
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - profile_image
          naver:
            client-id: 'UVOJf9MZasEgIIfbOuai'
            client-secret: 'nTzo_LAqg8'
            redirect-uri: 'http://localhost:8080/login/oauth2/code/naver'
            authorization-grant-type: 'authorization_code'
            scope:
              - email
        provider:
          kakao:
            authorization-uri: 'https://kauth.kakao.com/oauth/authorize'
            token-uri: 'https://kauth.kakao.com/oauth/token'
            user-info-uri: 'https://kapi.kakao.com/v2/user/me'
            user-name-attribute: id
          naver:
            authorization-uri: 'https://nid.naver.com/oauth2.0/authorize'
            token-uri: 'https://nid.naver.com/oauth2.0/token'
            user-info-uri: 'https://openapi.naver.com/v1/nid/me'
            user-name-attribute: response

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/ssafy?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: ssafy #비밀번호 알아서 바꿔주세요...
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect

  mail:
    default-encoding: UTF-8
    port: 587
    username: wocks6735
    password: bsgsbafpcvbwwdsc
    host: smtp.gmail.com
    properties:
      mail:
        auth: false
        debug: true
        smtp:
          starttls:
            enable: true
            required: true
 # main:
  #  allow-bean-definition-overriding: true #bean overriding
#        mime:
#          charset: UTF-8
#        transport:
#          protocol: smtp
logging:
  level:
    org.hibernate.SQL: debug
frontend:
  url: localhost
  port: 5173

OPENVIDU_URL: http://localhost:4443/
OPENVIDU_SECRET: MY_SECRET