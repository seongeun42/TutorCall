plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.diffplug.spotless' version '6.24.0'
}

group = 'com.potato'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

// java code auto lint
spotless {
	java {
//		// 사용하지 않는 import 제거
		removeUnusedImports('cleanthat-javaparser-unnecessaryimport')
		// import 순서 정의
		importOrder()
		cleanthat()
		// 구글 자바 포맷 적용
		googleJavaFormat()
//
		indentWithTabs(2)
		indentWithSpaces(4)
		// 공백 제거
		trimTrailingWhitespace()
		// 끝부분 New Line 처리
		formatAnnotations()
		endWithNewline()
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Spring Boot에서 Redis를 사용하기 위한 의존성입니다.
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// Spring Session을 Redis에 저장하기 위한 의존성입니다.
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-security:3.0.5'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.0.7'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// queryDSL dependencies 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// -- queryDSL --

	testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	//

	//test용 mysql 연결
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'
	//
}

// queryDSL 추가설정 : 빌드 옵션
def querydslSrcDir = 'build/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
// -- queryDSL --


tasks.named('test') {
	useJUnitPlatform()
}
