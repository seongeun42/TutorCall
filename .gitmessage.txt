######################
# Type: Subject 형식으로 제목을 아래 공백줄에 작성(: 뒤에 공백 주의)
# 제목은 50자 이내 / 첫글자는 대문자 / 마침표와 특수기호 사용 X / 영어로 작성 시, 동사 원형으로 시작
# 변경사항이 "무엇"이고 어느 부분에 대한 코드 변경 사항인지 명확하게 작성
# e.g.) Feat: Add devDependencies support for templates
# e.g.) Test: 회원정보 조회 API에 대한 403 에러 테스트 코드 추가
######################

# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리용)

######################
# Body는 필수 사항이 아님! 필요한 경우에만 아래 공백에 작성
# Body의 내용이 너무 길어질 경우, 한 줄의 내용은 72자 이내로 작성
# 코드를 "어떻게" 변경했는지 작성 X. "무엇"을 "왜" 변경했는지 자세하게 작성
######################

# Body를 작성한 경우, 아래 공백은 지우지 마세요 (본문과 꼬릿말 분리용)

######################
# 이슈 트레킹을을 위해 작성할 것
# 이슈 트레킹 유형
# Fixes: 이슈 수정중 (아직 해결되지 않은 경우)
# Resolves: 이슈를 해결했을 때 사용
# Ref: 참고할 이슈가 있을 때 사용
# Related to: 해당 커밋에 관련된 이슈번호 (아직 해결되지 않은 경우)
# 깃랩 이슈를 연결할 땐, 이슈번호 앞에 '#'을 붙일 것
# 지라 이슈를 연결할 땐, 이슈번호만 쓸 것
# e.g.) Related to: #48, S10P11A604-7
######################

######################
# 메시지 예시
# 
# Feat: 회원 가입 기능 구현
# 
# Resolves: #123
# Ref: #456
# Related to: #48, #45
#
# "좋은 git commit 메시지를 위한 영어 사전"을 참고하면서 작성할 것
# 메시지는 영어로 쓰는 것을 권장하나, 영어로 의미가 잘 전달 안 되게 쓸 바엔 한글로 쓰는 게 나음
######################

